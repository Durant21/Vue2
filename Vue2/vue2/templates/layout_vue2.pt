<!DOCTYPE html>
<html xmlns:v-bind="http://www.w3.org/1999/xhtml"
      xmlns:v-on="http://www.w3.org/1999/xhtml">
<script src="https://cdn.jsdelivr.net/npm/vue"></script>

<!--?Academind (https://www.youtube.com/watch?v=8gkT_yWvP3c) recommends -->
<!--?<script src="https://unpkg.com/vue/dist/vue.js"></script>-->
<body>

<div id="app">
  <h1>{{ message }}</h1>
</div>

<div id="app-2">
  <span v-bind:title="message">
    Hover your mouse over me for a few seconds
    to see my dynamically bound title!
  </span>
</div>


<div id="app-4">
  <ol>
    <li v-for="todo in todos">
      {{ todo.text }}
    </li>
  </ol>
</div>

<div id="app-5">
  <p>{{ message }}</p>
  <button v-on:click="reverseMessage">Reverse Message</button>
</div>

<ol>
  <!-- Create an instance of the todo-item component -->
  <todo-item>rr</todo-item>
</ol>

<div id="app-7">
  <ol>
    <!--
      Now we provide each todo-item with the todo object
      it's representing, so that its content can be dynamic.
      We also need to provide each component with a "key",
      which will be explained later.
    -->
    <todo-item
      v-for="item in groceryList"
      v-bind:todo="item"
      v-bind:key="item.id"
    ></todo-item>
  </ol>
</div>

<div id="app-8">
    <button v-on:click="title = 'New Title'"> Change Title</button>
    <p>{{ title }}</p>
</div>
<br> same as above but let's use a method <br>
<div id="app-9">
    <button v-on:click="changeTitle"> Change Title1</button>
    <p>{{ title }}</p>
</div>

<br> computed properties  <br>
<div id="app-10">
  <button v-on:click="increment">Increment</button>
    <p>Counter:  {{ counter }}</p>
    <p>Clicks: {{ clicks }}</p>
</div>

<br> <strong> conditionals & lists</strong>  <br>
<div id="app-11">
   <button v-on:click="show = !show">Show / Hide</button>
    <p v-if="show">I'm part-time visible</p>
    <p v-else>Am I visible?</p>
    <p v-show="show">Hurray I'm here!</p>
    <hr>


Loop through the Person list

    <ul>
        <li v-for="person in persons">
            {{ person.name }}
        </li>
    </ul>
</div>

<br><br>
output uppercase using a computed property
<br>
<div id="app-12">
    <p>{{ theTitle }}</p>
</div>


<br><br>
Filters:  Uppercase using global filter.
<br>
<div id="app-13">
    <p>{{ title | uppercase }}</p>
</div>


<br><br>
Chaining Filters:  lowercase by using a local filter on the result of the global filter.
<br>
<div id="app-14">
    <p>{{ title | uppercase | lowercase }}</p>
</div>


<script>


        var myObject = new Vue({
          el: '#app',
          data: {message: 'Hello Vue2'}
        })

        var app2 = new Vue({
          el: '#app-2',
          data: {
            message: 'You loaded this page on ' + new Date().toLocaleString()
          }
        })

        var app4 = new Vue({
          el: '#app-4',
          data: {
            todos: [
              { text: 'Learn JavaScript' },
              { text: 'Learn Vue' },
              { text: 'Build something awesome' }
            ]
          }
        })

        var app5 = new Vue({
          el: '#app-5',
          data: {
            message: 'Hello Vue.js!'
          },
          methods: {
            reverseMessage: function () {
              this.message = this.message.split('').reverse().join('')
            }
          }
        })

        // Define a new component called todo-item
        Vue.component('todo-item', {
            props: ['todo'],
          template: 'aaaa<li>{{ todo.text }}</li>'
        })

        Vue.component('todo-item', {
          props: ['todo'],
          template: '<li>{{ todo.text }}</li>'
        })

        var app7 = new Vue({
          el: '#app-7',
          data: {
            groceryList: [
              { id: 0, text: 'Vegetables' },
              { id: 1, text: 'Cheese' },
              { id: 2, text: 'Whatever else humans are supposed to eat' }
            ]
          }
        })

        var app8 = new Vue({
            el: '#app-8',
            data: {
                title: 'Hello World!'
            }
        })

         var app9 = new Vue({
            el: '#app-9',
            data: {
                title: 'Hello World!'
            },
             methods: {
                changeTitle() {
                    // Vue uses 'this' as the instance object
                    this.title = 'Changed Title, yet again!'
                }
             }
        })

        var app10 = new Vue({
            el: '#app-10',
            data: {
                counter: 0,
                clicks: 0
            },
            methods: {
                increment() {
                    this.counter = this.counter + 2;
                    this.clicks++;
                }
            }
        })


        var app11 = new Vue({
            el: '#app-11',
            data: {
                show: true,
                persons: [
                    {name: 'Max', age: 27},
                        {name: 'Chris', age: 30},
                        {name: 'Nora', age: 25}
                ]
            }
        });

        var app12 = new Vue({
            el: '#app-12',
            data: {
                title: 'hello world'
            },
            computed: {
                theTitle: function() {
                    return this.title.toUpperCase();
                }
            }
        });


        // Filters
        Vue.filter('uppercase', function(value) {
            return value.toUpperCase();
        })
         var app13 = new Vue({
            el: '#app-13',
            data: {
                title: 'hello world',
                message: 'something'
            },
            computed: {
                theTitle: function() {
                    return this.title.toUpperCase();
                }
            }
        });


         // Local Filters
        Vue.filter('uppercase', function(value) {
            return value.toUpperCase();
        })
         var app14 = new Vue({
            el: '#app-14',
            data: {
                title: 'hello world',
                message: 'something'
            },
            computed: {
                theTitle: function() {
                    return this.title.toUpperCase();
                }
            },
             filters: {
               lowercase: function(value) {
                   return value.toLowerCase();
               }
             }
        });



</script>

</body>
</html>